<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.boyoi.work.dao.QueryApiDao">

    <resultMap id="queryApiMap" type="com.boyoi.work.entity.QueryApi">
        <id column="guid" property="guid"/>
        <result column="api_url" property="apiUrl"/>
        <result column="sql_text" property="sqlText"/>
        <result column="create_time" property="createTime"/>
        <result column="opt_time" property="optTime"/>
        <result column="opt_person" property="optPerson"/>
        <result column="create_user" property="createUser"/>
        <result column="api_name" property="apiName"/>
        <result column="state" property="state"/>

    </resultMap>

    <!-- 添加 -->
    <insert id="add" parameterType="com.boyoi.work.entity.QueryApi">
        insert into api_query
        (guid, api_url, sql_text, create_time, opt_time, opt_person, api_name, state, create_user)
        values (#{guid}, #{apiUrl}, #{sqlText}, #{createTime}, #{optTime}, #{optPerson}, #{apiName}, #{state},
        #{createUser})
    </insert>

    <!-- 批量添加 -->
    <insert id="addBatch" parameterType="List">
        insert into api_query
        (guid,api_url,sql_text,create_time,opt_time,opt_person,api_name,state, create_user)
        values
        <foreach collection="list" item="queryApi" index="index" separator=",">
            (#{queryApi.guid},#{queryApi.apiUrl},#{queryApi.sqlText},#{queryApi.createTime},#{queryApi.optTime},#{queryApi.optPerson},#{queryApi.apiName},#{queryApi.state},#{queryApi.createUser})
        </foreach>
    </insert>

    <!-- 根据对象值删除 -->
    <update id="del" parameterType="com.boyoi.work.entity.QueryApi">
        update api_query set is_deleted = 'B'
        <where>
            <if test='null != guid and "" != guid'>and guid = #{guid}</if>
            <if test='null != apiUrl and "" != apiUrl'>and api_url = #{apiUrl}</if>
            <if test='null != sqlText and "" != sqlText'>and sql_text = #{sqlText}</if>
            <if test='null != createTime and "" != createTime'>and create_time = #{createTime}</if>
            <if test='null != optTime and "" != optTime'>and opt_time = #{optTime}</if>
            <if test='null != optPerson and "" != optPerson'>and opt_person = #{optPerson}</if>
            <if test='null != apiName and "" != apiName'>and api_name = #{apiName}</if>
            <if test='null != state and "" != state'>and state = #{state}</if>
            <if test='null != createUser and "" != createUser'>and create_user = #{createUser}</if>
        </where>
    </update>

    <!-- 根据ID批量删除 -->
    <update id="delBatch" parameterType="List">
        update api_query set is_deleted = 'B' where guid in (
        <foreach collection="list" item="item" index="index" separator=",">
            #(item)
        </foreach>
        )
    </update>

    <!-- 修改 -->
    <update id="update" parameterType="com.boyoi.work.entity.QueryApi">
        update api_query
        set guid = #{guid},
        api_url = #{apiUrl},
        sql_text = #{sqlText},
        create_time = #{createTime},
        opt_time = #{optTime},
        opt_person = #{optPerson},
        api_name = #{apiName},
        state = #{state},
        create_user = #{createUser}

        where guid = #{guid}
    </update>

    <!-- 根据对象值修改 -->
    <update id="updateByNotEmpty" parameterType="com.boyoi.work.entity.QueryApi">
        update api_query
        <set>
            <if test='null != guid and "" != guid'>guid = #{guid},</if>
            <if test='null != apiUrl and "" != apiUrl'>api_url = #{apiUrl},</if>
            <if test='null != sqlText and "" != sqlText'>sql_text = #{sqlText},</if>
            <if test='null != createTime'>create_time = #{createTime},</if>
            <if test='null != optTime'>opt_time = #{optTime},</if>
            <if test='null != optPerson and "" != optPerson'>opt_person = #{optPerson},</if>
            <if test='null != apiName and "" != apiName'>api_name = #{apiName},</if>
            <if test='null != state and "" != state'>state = #{state},</if>
            <if test='null != createUser and "" != createUser'>create_user = #{createUser}</if>
        </set>
        where guid=#{guid}
    </update>

    <!-- 根据主键查询 -->
    <select id="findById" resultMap="queryApiMap">
        select *
        from api_query
        where guid = #{guid}
    </select>

    <!-- 查询全部 -->
    <select id="findAll" resultMap="queryApiMap">
        select *
        from api_query
    </select>

    <!-- 根据对象值查询重复个数 -->
    <select id="findByCheck" resultType="Integer">
        select count(1) from api_query tableAlias
        <where>
            <if test='null != guid and "" != guid'>and guid != #{guid}</if>
            <if test='null != apiUrl and "" != apiUrl'>and api_url = #{apiUrl}</if>
            <if test='null != sqlText and "" != sqlText'>and sql_text = #{sqlText}</if>
            <if test='null != createTime'>and create_time = #{createTime}</if>
            <if test='null != optTime'>and opt_time = #{optTime}</if>
            <if test='null != optPerson and "" != optPerson'>and opt_person = #{optPerson}</if>
            <if test='null != apiName and "" != apiName'>and api_name = #{apiName}</if>
            <if test='null != state and "" != state'>and state = #{state}</if>
            <if test='null != createUser and "" != createUser'>and create_user = #{createUser}</if>
        </where>
    </select>

    <!-- 根据对象值查询 -->
    <select id="findByDomain" resultMap="queryApiMap">
        select * from api_query tableAlias
        <where>
            <if test='null != guid and "" != guid'>and guid = #{guid}</if>
            <if test='null != apiUrl and "" != apiUrl'>and api_url = #{apiUrl}</if>
            <if test='null != sqlText and "" != sqlText'>and sql_text = #{sqlText}</if>
            <if test='null != createTime'>and create_time = #{createTime}</if>
            <if test='null != optTime'>and opt_time = #{optTime}</if>
            <if test='null != optPerson and "" != optPerson'>and opt_person = #{optPerson}</if>
            <if test='null != apiName and "" != apiName'>and api_name = #{apiName}</if>
            <if test='null != state and "" != state'>and state = #{state}</if>
            <if test='null != createUser and "" != createUser'>and create_user = #{createUser}</if>
        </where>
    </select>

    <!-- 分页查询方法 -->
    <select id="findByGridRequest" resultMap="queryApiMap">
        select * from api_query tableAlins
        <where>
            <foreach item="item" index="key" collection="map2" open="" separator=" AND " close="">
                <if test="key=='apiUrl'">
                    tableAlins.api_url ilike '%${item}%'
                </if>
                <if test="key=='optPerson'">
                    tableAlins.opt_person ilike '%${item}%'
                </if>
                <if test="key=='apiName'">
                    tableAlins.api_name ilike '%${item}%'
                </if>
                <if test="key=='sqlText'">
                    tableAlins.sql_text ilike '%${item}%'
                </if>
                <if test="key=='state'">
                    tableAlins.state = #{item}
                </if>
                <if test="key=='createUser'">
                    tableAlins.create_user = #{item}
                </if>
                <if test="key == 'createTimeStart'">
                    tablealins.create_time &gt;= '${item} 00:00:00'
                </if>
                <if test="key == 'createTimeEnd'">
                    tablealins.create_time &lt;= '${item} 23:59:59'
                </if>
                <if test="key == 'optTimeStrStart'">
                    tablealins.opt_time &gt;= '${item} 00:00:00'
                </if>
                <if test="key == 'optTimeStrEnd'">
                    tablealins.opt_time &lt;= '${item} 23:59:59'
                </if>
            </foreach>
        </where>
    </select>
    <select id="findByUrl" resultMap="queryApiMap">
        select *
        from api_query
        where api_url = #{apiUrl}
        and create_user = #{createUser}
        order by api_url
    </select>


</mapper>
